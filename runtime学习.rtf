{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red228\green124\blue72;\red0\green0\blue0;\red255\green44\blue56;
\red65\green204\blue69;\red211\green24\blue149;\red255\green255\blue255;\red0\green160\blue255;\red35\green255\blue131;
\red120\green109\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c89600\c48800\c28400;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c17100\c21900;
\csgenericrgb\c25500\c80100\c27000;\csgenericrgb\c82800\c9500\c58300;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c62600\c100000;\csgenericrgb\c13700\c100000\c51200;
\csgenericrgb\c46900\c42600\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28900\viewh16940\viewkind0
\deftab1038
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf2 \cb3 #import \cf4 <objc/message.h>\cf5 // message
\f1 \'c0\'ef\'c3\'e6\'b0\'fc\'ba\'ac
\f0 runtime
\f1 \'b5\'c4\'cd\'b7\'ce\'c4\'bc\'fe
\f2\fs24 \cf0 \

\f0\fs42 \cf2 //#import \cf4 <objc/runtime.h>
\f2\fs24 \cf0 \
\
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf6 @interface\cf7  Person : \cf8 NSObject\cf7 <\cf8 NSCoding\cf7 >
\f2\fs24 \cf0 \
\
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 /** 
\f1 \'c3\'fb\'d7\'d6
\f0  */
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf6 @property\cf7  (\cf6 nonatomic\cf7 , \cf6 copy\cf7 ) \cf8 NSString\cf7  *name;
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 /** 
\f1 \'c4\'ea\'c1\'e4
\f0  */
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf6 @property\cf7  (\cf6 nonatomic\cf7 , \cf6 assign\cf7 ) \cf8 NSInteger\cf7  age;
\f2\fs24 \cf0 \
\

\f0\fs42 \cf6 @end
\f2\fs24 \cf0 \
\

\f0\fs42 \cf6 @implementation\cf7  Person
\f2\fs24 \cf0 \
\

\f0\fs42 \cf7 + (\cf6 void\cf7 )load\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 // 
\f1 \'bd\'bb\'bb\'bb\'b7\'bd\'b7\'a8
\f0 method_exchangeImplementations
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 /**
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5      class_getClassMethod 
\f1 \'bb\'f1\'c8\'a1\'c0\'e0\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \

\f0\fs42 \cf5      class_getInstanceMethod 
\f1 \'bb\'f1\'c8\'a1\'b6\'d4\'cf\'f3\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \

\f0\fs42 \cf5      */
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf8 Method\cf7  method1 = \cf8 class_getClassMethod\cf7 (\cf6 self\cf7 , \cf6 @selector\cf7 (init));
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 Method\cf7  method2 = \cf8 class_getClassMethod\cf7 (\cf6 self\cf7 , \cf6 @selector\cf7 (initWithArray:));
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 // 
\f1 \'bd\'bb\'bb\'bb
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 method_exchangeImplementations\cf7 (method1, method2);
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 // 
\f1 \'b9\'e9\'b5\'b5\'ca\'b5\'cf\'d6\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7 - (\cf6 void\cf7 )encodeWithCoder:(\cf8 NSCoder\cf7  *)aCoder\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     [aCoder \cf8 encodeObject\cf7 :\cf9 _name\cf7  \cf8 forKey\cf7 :\cf4 @"name"\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     [aCoder \cf8 encodeInteger\cf7 :\cf9 _age\cf7  \cf8 forKey\cf7 :\cf4 @"age"\cf7 ];
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //    
\f1 \'d3\'b3\'c9\'e4
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf5 /*
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5     for (NSInteger i = 0; i < 
\f1 \'ca\'f4\'d0\'d4\'b8\'f6\'ca\'fd
\f0 ; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf5         // 
\f1 \'b9\'e9\'b5\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf5         [aCoder encodeObject:
\f1 \'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5
\f0  forKey:
\f1 \'ca\'f4\'d0\'d4\'b5\'c4\'c3\'fb\'b3\'c6
\f0 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf5     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf5      */
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf5 // 
\f1 \'c0\'fb\'d3\'c3
\f0 runtime
\f1 \'b9\'e9\'b5\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 unsigned\cf7  \cf6 int\cf7  count = \cf10 0\cf7 ;
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //    
\f1 \'d4\'da
\f0 C
\f1 \'c0\'ef\'c3\'e6\'a3\'ac\'c8\'e7\'b9\'fb\'ba\'af\'ca\'fd\'c3\'fb\'d7\'d6\'a3\'ac\'d3\'d0
\f0 create/copy/new
\f1 \'b5\'c4\'ca\'b1\'ba\'f2\'d4\'da\'b6\'d1\'c0\'ef\'c3\'e6\'bf\'aa\'b1\'d9\'bf\'d5\'bc\'e4\'a3\'ac\'d2\'f2\'b4\'cb\'d0\'e8\'d2\'aa\'ca\'d6\'b6\'af\'ca\'cd\'b7\'c5\'a3\'ac\'d5\'bb\'ca\'c7\'cf\'b5\'cd\'b3\'ca\'cd\'b7\'c5
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf8 Ivar\cf7  *ivars = \cf8 class_copyIvarList\cf7 ([\cf6 self\cf7  \cf8 class\cf7 ], &count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < count; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf5 // 
\f1 \'c8\'a1\'b3\'f6
\f0 Ivar
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 Ivar\cf7  ivar = ivars[i];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf5 // 
\f1 \'c8\'a1\'b3\'f6\'ca\'f4\'d0\'d4\'c3\'fb\'d7\'d6
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 const\cf7  \cf6 char\cf7  *name = \cf8 ivar_getName\cf7 (ivar);
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 NSString\cf7  *KEY = [\cf8 NSString\cf7  \cf8 stringWithUTF8String\cf7 :name];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf5 // 
\f1 \'b9\'e9\'b5\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf7         [aCoder \cf8 encodeObject\cf7 :[\cf6 self\cf7  \cf8 valueForKey\cf7 :KEY] \cf8 forKey\cf7 :KEY];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //    
\f1 \'ca\'cd\'b7\'c5
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf8 free\cf7 (ivars);
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 // 
\f1 \'bd\'e2\'b5\'b5\'ca\'b5\'cf\'d6\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7 - (\cf6 instancetype\cf7 )initWithCoder:(\cf8 NSCoder\cf7  *)aDecoder\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 self\cf7  = [\cf6 super\cf7  \cf8 init\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 if\cf7  (\cf6 self\cf7 ) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf9 _name\cf7  = [aDecoder \cf8 decodeObjectForKey\cf7 :\cf4 @"name"\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf9 _age\cf7  = [aDecoder \cf8 decodeIntegerForKey\cf7 :\cf4 @"age"\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf5 // 
\f1 \'bd\'e2\'b5\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 unsigned\cf7  \cf6 int\cf7  count = \cf10 0\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 Ivar\cf7  *ivars = \cf8 class_copyIvarList\cf7 ([\cf6 self\cf7  \cf8 class\cf7 ], &count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < count; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf8 Ivar\cf7  ivar = ivars[i];
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf6 const\cf7  \cf6 char\cf7  *name = \cf8 ivar_getName\cf7 (ivar);
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf8 NSString\cf7  *KEY = [\cf8 NSString\cf7  \cf8 stringWithUTF8String\cf7 :name];
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf5 // 
\f1 \'bd\'e2\'b5\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf6 id\cf7  value = [aDecoder \cf8 decodeObjectForKey\cf7 :KEY];
\f2\fs24 \cf0 \

\f0\fs42 \cf7             \cf5 // 
\f1 \'c9\'e8\'d6\'c3\'b5\'bd\'ca\'f4\'d0\'d4\'c9\'cf
\f0 -kvc
\f2\fs24 \cf0 \

\f0\fs42 \cf7             [\cf6 self\cf7  \cf8 setValue\cf7 :value \cf8 forKey\cf7 :KEY];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7         
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf5 //    
\f1 \'ca\'cd\'b7\'c5
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 free\cf7 (ivars);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 return\cf7  \cf6 self\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\

\f0\fs42 \cf6 @end\cf7 \
\
\
\
\
- (\cf6 void\cf7 )testRuntime\{\cf5 \
//   
\f1 \'cb\'f9\'d3\'d0
\f0 OC
\f1 \'b7\'bd\'b7\'a8\'b5\'c4\'b5\'f7\'d3\'c3\'a3\'ac\'b6\'bc\'ca\'c7\'b8\'f8\'c4\'b3\'b8\'f6\'b6\'d4\'cf\'f3\'b7\'a2\'cb\'cd\'c4\'b3\'b8\'f6\'cf\'fb\'cf\'a2
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf9 Person\cf7  *p = [\cf9 Person\cf7  \cf8 alloc\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \ulth \ulc7 [p \cf8 \ulc8 init\cf7 \ulc7 ]\ulnone ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //   
\f1 \'c9\'cf\'c3\'e6\'b5\'c4\'d3\'ef\'be\'e4\'b5\'c8\'bc\'db\'d3\'da\'cf\'c2\'c3\'e6
\f0 2
\f1 \'be\'e4\'d3\'ef\'be\'e4\'a3\'ba
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7   \cf9 Person\cf7  *p1 = \cf8 objc_msgSend\cf7 (\cf8 objc_getClass\cf7 (\cf4 "Person"\cf7 ), \cf8 sel_registerName\cf7 (\cf4 "alloc"\cf7 ));\

\f1 =>Person *p1 = objc_msgSend([Person class],@selector(alloc));
\f0 \

\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 objc_msgSend\cf7 (p1, \cf8 sel_registerName\cf7 (\cf4 "init"\cf7 ));
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSLog\cf7 (\cf4 @"p = %@,p1 = %@"\cf7 ,p,p1);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 /**
\f2\fs24 \cf0 \

\f0\fs42 \cf5  * runtime
\f1 \'a3\'a8\'d4\'cb\'d0\'d0\'ca\'b1\'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5     <objc/runtime>
\f1 \'c6\'bb\'b9\'fb\'b8\'f8\'bf\'aa\'b7\'a2\'d5\'df\'cc\'e1\'b9\'a9\'d2\'bb\'cc\'d7\'cd\'ea\'d5\'fb\'b5\'c4\'d4\'cb\'d0\'d0\'ca\'b1\'bf\'e2
\f0 API
\f2\fs24 \cf0 \

\f0\fs42 \cf5  
\f1 \'d7\'f7\'d3\'c3\'a3\'ba
\f2\fs24 \cf0 \

\f0\fs42 \cf5  runtime
\f1 \'ca\'c7\'ca\'f4\'d3\'da
\f0 oc
\f1 \'b5\'d7\'b2\'e3\'ca\'b5\'cf\'d6\'a3\'ac\'bf\'c9\'d2\'d4\'bd\'f8\'d0\'d0\'d2\'bb\'d0\'a9\'b7\'c7\'b3\'a3\'b5\'d7\'b2\'e3\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'a8\'d3\'c3
\f0 oc
\f1 \'ce\'de\'b7\'a8\'cd\'ea\'b3\'c9\'b5\'c4\'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5  1.
\f1 \'c0\'fb\'d3\'c3
\f0 runtime
\f1 \'a3\'ac\'d4\'da\'b3\'cc\'d0\'f2\'d4\'cb\'d0\'d0\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'d0\'a3\'ac\'b6\'af\'cc\'ac\'b5\'c4\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'c0\'e0\'a3\'a8\'b1\'c8\'c8\'e7
\f0 kvo
\f1 \'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5  2.
\f1 \'c0\'fb\'d3\'c3
\f0 runtime
\f1 \'a3\'ac\'d4\'da\'b3\'cc\'d0\'f2\'d4\'cb\'d0\'d0\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'d0\'a3\'ac\'b6\'af\'cc\'ac\'d0\'de\'b8\'c4\'d2\'bb\'b8\'f6\'c0\'e0\'b5\'c4\'ca\'f4\'d0\'d4
\f0 /
\f1 \'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \

\f0\fs42 \cf5  3.
\f1 \'b1\'e9\'c0\'fa\'d2\'bb\'b8\'f6\'c0\'e0\'b5\'c4\'cb\'f9\'d3\'d0\'b3\'c9\'d4\'b1\'b1\'e4\'c1\'bf\'a3\'a8\'b3\'a3\'d3\'c3\'d3\'da\'d7\'d6\'b5\'e4\'d7\'aa\'c4\'a3\'d0\'cd\'bf\'f2\'bc\'dc\'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5  
\f2\fs24 \cf0 \

\f0\fs42 \cf5  typedef struct objc_method *Method;// 
\f1 \'b3\'c9\'d4\'b1\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \

\f0\fs42 \cf5  typedef struct objc_ivar *Ivar;// 
\f1 \'b3\'c9\'d4\'b1\'b1\'e4\'c1\'bf\'a3\'a8\'ca\'f4\'d0\'d4\'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5  
\f2\fs24 \cf0 \

\f0\fs42 \cf5  SEL
\f1 \'a3\'a8\'b7\'bd\'b7\'a8\'b1\'e0\'ba\'c5\'a3\'a9
\f0     IMP
\f1 \'a3\'a8\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\'a3\'a9
\f2\fs24 \cf0 \

\f0\fs42 \cf5  */
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf5 // 
\f1 \'bb\'f1\'c8\'a1
\f0 person
\f1 \'c0\'e0\'d6\'d0\'b5\'c4\'ca\'f4\'d0\'d4
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 unsigned\cf7  \cf6 int\cf7  count1 = \cf10 0\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 Ivar\cf7  *ivars = \cf8 class_copyIvarList\cf7 ([\cf9 Person\cf7  \cf8 class\cf7 ], &count1);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < count1; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 Ivar\cf7  ivar = ivars[i];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 const\cf7  \cf6 char\cf7  *name = \cf8 ivar_getName\cf7 (ivar);
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 NSString\cf7  *KEY = [\cf8 NSString\cf7  \cf8 stringWithUTF8String\cf7 :name];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 NSLog\cf7 (\cf4 @"key = %@"\cf7 ,KEY);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 // 
\f1 \'bb\'f1\'c8\'a1
\f0 person
\f1 \'c0\'e0\'d6\'d0\'b5\'c4\'b7\'bd\'b7\'a8
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 unsigned\cf7  \cf6 int\cf7  count2 = \cf10 0\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 Method\cf7  *methods = \cf8 class_copyMethodList\cf7 ([\cf9 Person\cf7  \cf8 class\cf7 ], &count2);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < count2; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 Method\cf7  method = methods[i];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 SEL\cf7  \ulth s\ulnone el = \cf8 method_getName\cf7 (method);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //   
\f1 \'b7\'bd\'b7\'a8\'bd\'bb\'bb\'bb
\f0 -OC
\f1 \'b5\'c4\'b7\'bd\'b7\'a8\'c6\'db\'c6\'ad\'a3\'ba
\f0 method_exchangeImplementations
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf5 // 
\f1 \'b2\'e9\'bf\'b4\'b5\'d8\'d6\'b7
\f0 :(lldb) x/100xb arr
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 // 
\f1 \'d0\'de\'b8\'c4
\f0 arr
\f1 \'b5\'c4\'b3\'a4\'b6\'c8
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSMutableArray\cf7  *arr = [\cf8 NSMutableArray\cf7  \cf8 array\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < \cf10 10\cf7 ; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         [arr \cf8 addObject\cf7 :\cf4 @"111"\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSLog\cf7 (\cf4 @"
\f1 \'cf\'c8\'c7\'b0\'b3\'a4\'b6\'c8\'ca\'c7\'a3\'ba
\f0 %zd"\cf7 ,arr.count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 void\cf7  *address = (\cf6 __bridge\cf7  \cf6 void\cf7  *)(arr);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     *((\cf8 NSUInteger\cf7  *)address+\cf10 1\cf7 ) = \cf10 5\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSLog\cf7 (\cf4 @"
\f1 \'d6\'ae\'ba\'f3\'b3\'a4\'b6\'c8\'ca\'c7\'a3\'ba
\f0 %zd"\cf7 ,arr.count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\

\f0\fs42 \cf7 - (\cf6 void\cf7 )save\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf9 Person\cf7  *p = [[\cf9 Person\cf7  \cf8 alloc\cf7 ] \cf8 init\cf7 ];
\f2\fs24 \cf0 \

\f0\fs42 \cf7     p.\cf9 name\cf7  = \cf4 @"Yesky"\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     p.\cf9 age\cf7  = \cf10 29\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSString\cf7  *tmp = \cf8 NSTemporaryDirectory\cf7 ();
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSString\cf7  *filePath = [tmp \cf8 stringByAppendingPathComponent\cf7 :\cf4 @"Yesky.txt"\cf7 ];
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //    
\f1 \'b9\'e9\'b5\'b5
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     [\cf8 NSKeyedArchiver\cf7  \cf8 archiveRootObject\cf7 :p \cf8 toFile\cf7 :filePath];
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\

\f0\fs42 \cf7 - (\cf6 void\cf7 )get\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSString\cf7  *tmp = \cf8 NSTemporaryDirectory\cf7 ();
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSString\cf7  *filePath = [tmp \cf8 stringByAppendingPathComponent\cf7 :\cf4 @"Yesky.txt"\cf7 ];
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf5 //    
\f1 \'bd\'e2\'b5\'b5
\f2\fs24 \cf0 \
\pard\tx1038\pardeftab1038\pardirnatural\partightenfactor0

\f0\fs42 \cf7     \cf9 Person\cf7  *\ulth p\ulnone  = [\cf8 NSKeyedUnarchiver\cf7  \cf8 unarchiveObjectWithFile\cf7 :filePath];
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
\

\f0\fs42 \cf7 - (\cf6 void\cf7 )runtime\{
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf5 // 1.
\f1 \'c0\'e0\'d6\'d0\'ca\'f4\'d0\'d4\'b5\'c4\'b8\'f6\'ca\'fd\'a3\'a8
\f0 count
\f1 \'b5\'c4\'d6\'b5\'bc\'b4\'ce\'aa\'c0\'e0\'d6\'d0\'ca\'f4\'d0\'d4\'b8\'f6\'ca\'fd\'a3\'a9\'a3\'ac\'d4\'da
\f0 runtime
\f1 \'d6\'d0\'c8\'a1\'c0\'e0\'d6\'d0\'b5\'c4\'ca\'f4\'d0\'d4\'b8\'f6\'ca\'fd\'c3\'bb\'d3\'d0\'cb\'bd\'d3\'d0\'d2\'bb\'cb\'b5
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 unsigned\cf7  \cf6 int\cf7  count = \cf10 0\cf7 ;
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 Ivar\cf7  *ivars = \cf8 class_copyIvarList\cf7 ([\cf9 Person\cf7  \cf8 class\cf7 ], &count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf6 for\cf7  (\cf8 NSInteger\cf7  i = \cf10 0\cf7 ; i < count; i++) \{
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 Ivar\cf7  ivar = ivars[i];
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf6 const\cf7  \cf6 char\cf7  *name = \cf8 ivar_getName\cf7 (ivar);
\f2\fs24 \cf0 \

\f0\fs42 \cf7         \cf8 NSLog\cf7 (\cf4 @"%s"\cf7 ,name);
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \}
\f2\fs24 \cf0 \

\f0\fs42 \cf7     
\f2\fs24 \cf0 \

\f0\fs42 \cf7     \cf8 NSLog\cf7 (\cf4 @"%d"\cf7 ,count);
\f2\fs24 \cf0 \

\f0\fs42 \cf7 \}
\f2\fs24 \cf0 \
}